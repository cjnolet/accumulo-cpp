{"name":"Accumulo++","tagline":"A C++ Implementation of the Accumulo Thrift Proxy","body":"Accumulo++\r\n==========\r\n\r\nA C++ library for Apache Accumulo\r\n\r\n## Why a C++ Library for Accumulo?\r\n\r\nSimple- When I'm running logic in InfoSphere Streams, I'd like to talk to Accumulo in C/C++. If I'm running code that needs to utilize CUDA and the GPU, I'd like to stay in C/C++ also. In Accumulo 1.5, we were given an Apache Thrift-based proxy that allows us to generate clients in differing languages. This is one such client which has been augmented to look as close as possible to the Java-based API that we've all come to know and love.\r\n\r\n## Requirements\r\n\r\n1. A running Accumulo cluster\r\n2. The new Accumulo Thrift Proxy server (1.6 included in this codebase)\r\n3. Thrift C++ library installed (http://thrift.apache.org/docs/install/)\r\n\r\n## Quick Start\r\n\r\n1. You'll need to run the Accumulo Thrift Proxy server. A jar is packaged with this codebase in order to get this started quickly. Locate the server/proxy.properties file and fill in the necessary fields. When you are done, start up the server by running the following:\r\n```\r\n./server/runProxy.sh\r\n```\r\n2. Build the example programs:\r\n```\r\nmake\r\n```\r\n3. Create an example table using the CreateTable example program\r\n```\r\n./target/CreateTableExample.o localhost 42424 root secret testTable\r\n```\r\n4. Run the BatchWriter example program to insert some rows into Accumulo:\r\n```\r\n./target/BatchWriterExample.o localhost 42424 root secret testTable row1 col1 qual6 U val\r\n```\r\n5. Run the Scanner example program to read rows from Accumulo:\r\n```\r\n./target/ScannerExample.o localhost 42424 root secret testTable A z\r\n```\r\n\r\n## Code Samples\r\n\r\n### TableOperations Sample\r\n```c++\r\n\r\ntry {\r\n\tConector connector(\"localhost\", 42424, \"root\", \"secret\");\r\n\tconnector.tableOperations().createTable(\"testTable\");\r\n\tconnector.tableOperations().compactTable(\"testTable\");\r\n\tconnector.close();\r\n\r\n} catch(AccumuloSecurityException &e) {\r\n\tcout << \"There was a problem with the given credentials.\\n\";\r\n\r\n} catch(TableNotFoundException &e) {\r\n\tcout << \"The specified table was not found.\\n\";\r\n}\r\n\r\n```\r\n\r\n### BatchWriter Sample\r\n```c++\r\n\r\ntry {\r\n\tConnector connector(\"localhost\", 42424, \"root\", \"secret\");\r\n\tBatchWriter writer = connector.createBatchWriter(\"testTable\", 500000, 10000, 10000, 2);\r\n\r\n\tMutation mutation(\"rowId\");\r\n\tmutation.put(\"colFam\", \"colQual\", \"colVis\", 500000, \"val\");\r\n\r\n\twriter.addMutation(mutation);\r\n\twriter.flush();\r\n\twriter.close();\r\n\t\r\n\tconnector.close();\r\n\r\n} catch(AccumuloSecurityException &e) {\r\n\tcout << \"There was a problem with the given credentials.\\n\";\r\n\r\n} catch(TException &e) {\r\n\tcout << \"An error occurred: the mutation was not written to the table.\\n\";\r\n}\r\n```  \r\n\r\n### Scanner Sample\r\n\r\n```c++\r\n\r\n\r\ntry {\r\n\tConnector connector(\"localhost\", 42424, \"root\", \"secret\");\r\n\r\n\tAuthorizations auths(\"A,B\");\r\n\tScanner scanner = connector.createScanner(\"testTable\", auths);\r\n\r\n\t// Set up the range\r\n\tKey start(\"A\");\r\n\tKey stop(\"z\");\r\n\tRange range(start, stop);\r\n\r\n\tscanner.setRange(range);\r\n\tscanner.fetchColumn(\"department\", \"1\");\r\n\r\n\tScannerIterator itr = scanner.iterator();\r\n\t\r\n\twhile(itr.hasNext()) {\r\n\t\tKeyValue kv = itr.next();\r\n\r\n\t\tcout << kv.getKey().getRow() << \" \" << kv.getKey().getColFamily() << \":\" \r\n\t\t\t\t << kv.getKey().getColQualifier() << \" [\" << kv.getKey().getColVisibility() \r\n\t\t\t\t << \"] \" << kv.getKey().getTimestamp() << \"\\t\" << kv.getValue() << \"\\n\";\r\n\r\n\t}\r\n\t\r\n\titr.close();\r\n\tconnector.close();\r\n\r\n} catch(AccumuloSecurityException &e) {\r\n\tcout << \"There was a problem with the given credentials.\\n\";\r\n\r\n} catch(TableNotFoundException &e) {\r\n\tcout << \"The specified table was not found.\\n\";\r\n}\r\n\r\n```\r\n\r\n### BatchScanner Example\r\n\r\n```c++\r\n\r\ntry {\r\n\tConnector connector(\"localhost\", 42424, \"root\", \"secret\");\r\n\r\n\tAuthorizations auths(\"A,B\");\t\r\n\tBatchScanner scanner = connector.createBatchScanner(\"testTable\", auths, 5);\r\n\t\r\n\t// construct ranges\r\n\tRange range1(new Key(\"A\"), new Key(\"Z\");\r\n\tRange range2(new Key(\"a\"), new Key(\"z\");\r\n\t\r\n\tvector<Range> ranges;\r\n\tranges.push_back(range1);\r\n\tranges.push_back(range2);\r\n\t\r\n\tscanner.setRanges(ranges);\r\n\tscanner.fetchColumn(\"department\", \"1\");\r\n\t\r\n\tBatchScannerIterator itr = scanner.iterator();\r\n\t\r\n\twhile(itr.hasNext()) {\r\n\r\n\t\tKeyValue kv = itr.next();\r\n\r\n\t\tcout << kv.getKey().getRow() << \" \" << kv.getKey().getColFamily() << \":\" \r\n\t\t\t << kv.getKey().getColQualifier() << \" [\" << kv.getKey().getColVisibility() \r\n\t\t\t << \"] \" << kv.getKey().getTimestamp() << \"\\t\" << kv.getValue() << \"\\n\";\r\n\r\n\t}\r\n\t\r\n\titr.close();\r\n\tconnector.close();\r\n\t\r\n} catch(AccumuloSecurityException &e) {\r\n\tcout << \"There was a problem with the given credentials.\\n\";\r\n\r\n} catch(TableNotFoundException &e) {\r\n\tcout << \"The specified table was not found.\\n\";\r\n}\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}